---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';
import { marked } from 'marked';
import ShareButtons from '../../components/ShareButtons.astro';

// Fungsi untuk format tanggal (dd mmmm yyyy)
function formatDate(dateString) {
	const options = { day: '2-digit', month: 'long', year: 'numeric' };
	return new Date(dateString).toLocaleDateString('id-ID', options);
}

// Fungsi untuk estimasi waktu baca
function calculateReadingTime(content) {
    if (!content) return '1 min';
    const wordsPerMinute = 200;
    const words = content.trim().split(/\s+/).length;
    return `${Math.ceil(words / wordsPerMinute)} min`;
}

// Mengambil semua slug untuk membuat halaman statis saat build
export async function getStaticPaths() { 
    const { data: posts } = await supabase.from('posts').select('slug');
    return posts?.map(({ slug }) => ({ params: { slug } })) || [];
}

// Mengambil data lengkap untuk postingan yang sedang dibuka
const { slug } = Astro.params;
const { data: post } = await supabase.from('posts').select('*, image_url, content, category').eq('slug', slug).single();

// Jika post tidak ditemukan, arahkan ke halaman 404
if (!post) {
    return Astro.redirect('/404');
}

// Memproses konten dari Markdown ke HTML
const renderedContent = post ? await marked.parse(post.content) : '';
const readingTime = calculateReadingTime(post?.content);

// Menyiapkan variabel untuk tombol share
const pageUrl = Astro.url.href;
const shareText = `Baca "${post?.title}" di Akurasi Udara:`;
---
<Layout title={post?.title || 'Postingan'}>
	<div class="row justify-content-center">
		<div class="col-lg-8">
			<header class="mb-4">
				<h1 class="display-5 fw-bold">{post?.title}</h1>
				{/* Menampilkan metadata lengkap */}
				<div class="d-flex align-items-center text-secondary mb-3">
					<a href={`/blog/kategori/${post?.category}`} class="btn btn-sm btn-outline-secondary me-3">
						{post?.category || 'Umum'}
					</a>
					<span class="text-muted small me-3"><i class="bi bi-calendar-event me-1"></i> {formatDate(post?.created_at)}</span>
					<span class="text-muted small"><i class="bi bi-eye-fill me-1"></i> {readingTime}</span>
				</div>
			</header>
			
			<img src={post?.image_url} class="img-fluid mb-4" alt={`Gambar sampul untuk ${post.title}`} />
			
			<article class="prose" id="post-content">
				<Fragment set:html={renderedContent} />
                <hr class="my-5">
                <ShareButtons url={pageUrl} text={shareText} />
			</article>
		</div>
	</div>

    <script is:inline src="/js/twemoji.min.js"></script>
    
    <script is:inline>
        // Skrip yang andal untuk menjalankan konversi emoji
        function runTwemoji() {
            setTimeout(() => {
                const postContent = document.getElementById('post-content');
                if (typeof twemoji !== 'undefined' && postContent) {
                    twemoji.parse(postContent, {
                        folder: 'svg',
                        ext: '.svg'
                    });
                }
            }, 0);
        }
        document.addEventListener('DOMContentLoaded', runTwemoji);
        document.addEventListener('astro:page-load', runTwemoji);
    </script>
</Layout>